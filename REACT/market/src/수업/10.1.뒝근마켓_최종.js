/*
    Ï†úÎ™© ÎàÑÎ•¥Î©¥ Î™®Îã¨Ï∞Ω ÎùÑÏö∞Í≥†, Îã´Í∏∞ ÎàÑÎ•¥Î©¥ Îã´ÌûàÍ≤å ÌïòÍ∏∞
    (Ïù¥Î≤à ÏòàÏ†úÏóêÏÑúÎäî Ï†ïÎ≥¥Îäî ÎÑòÍ∏∞ÏßÄ ÏïäÍ≥† Î™®Îã¨Ï∞ΩÎßå ÎùÑÏõ†Îã§ Î∫êÎã§ ÌïòÍ∏∞)

    1) (Ïô∏Î∂Ä Ïª¥Ìè¨ÎÑåÌä∏) 08.2.Î™®Îã¨ Ïª¥Ìè¨ÎÑåÌä∏ ÏÉùÏÑ±
    2) useState ÎßåÎì§Í∏∞ => true false Ï†ÑÌôòÌï¥Í∞ÄÎ©¥ÏÑú Ï∞Ω Î≥¥ÏòÄÎã§ ÏïàÎ≥¥ÏòÄÎã§ ÌïòÍ∏∞
    
*/ 
import React, {useState} from "react";
import './css/ÎíùÍ∑º.css'
import Modal from "./10.2.ÎíùÍ∑º_Modal(Ï†ïÎ≥¥Î∞õÏïÑÏÑúÏ∂úÎ†•)";

function Ex08_1() {

    const [itemList, setItemList] = useState([
        {
            id: 3,
            title: 'ÌåùÎãàÎã§3',
            content: 'ÎÇ¥Ïö©3 Ïù¥ÏóêÏú†~',
            likeCount: 0,
            uploadTime: '1ÏãúÍ∞Ñ Ï†Ñ',
            completeChk: true,
        },
        {
            id: 2,
            title: 'ÌåùÎãàÎã§2',
            content: 'ÎÇ¥Ïö©2 Ïù¥ÏóêÏú†~',
            likeCount: 0,
            uploadTime: '2ÏãúÍ∞Ñ Ï†Ñ',
            completeChk: true,
        },
        {
            id: 1,
            title: 'ÌåùÎãàÎã§1',
            content: 'ÎÇ¥Ïö©1 Ïù¥ÏóêÏú†~',
            likeCount: 0,
            uploadTime: '3Ïùº Ï†Ñ',
            completeChk: true,
        },
    ]);


    function getFromChild(index, titleInput, contentInput) {
        console.log(index + " , " +titleInput + " , " +contentInput);

        let tmp_itemList = [...itemList];

        // ÏàòÏ†ïÏùºÎïå
        if(index >= 0) {
            tmp_itemList[index].title = titleInput;
            tmp_itemList[index].content = contentInput;
        }
        
        // Îì±Î°ùÏùºÎïå
        else if(index == -1) {
            let newInfo = {
                id: itemList.length + 1,
                title: titleInput,
                content: contentInput,
                likeCount: 0,
                uploadTime: 'Î∞©Í∏à',
                completeChk: true,
            }

            tmp_itemList.unshift(newInfo)
        }

        setItemList(tmp_itemList);
    }
 

    // Ï¢ãÏïÑÏöî Ïπ¥Ïö¥Ìä∏ ÏóÖ
    function like_count_up(index) { 
         let tmp_itemList = [...itemList];
         tmp_itemList[index].likeCount = tmp_itemList[index].likeCount+1;
         setItemList(tmp_itemList)
    }
 
     
    
    // ÌåêÎß§ÏôÑÎ£å ÎÑ£Í∏∞
    // let [completeChk, setCompleteChk] = useState([true, true, true]); 
    function title_chg(index) {
        let tmp_itemList = [...itemList]; 

        if(tmp_itemList[index].completeChk === true) {
            // (ÌåêÎß§ÏôÑÎ£å) Î¨∏Íµ¨ ÎÑ£Îäî Î∂ÄÎ∂Ñ
            tmp_itemList[index].title = tmp_itemList[index].title + " (ÌåêÎß§ÏôÑÎ£å)";

            // true Î•º false Î°ú Î≥ÄÍ≤Ω
            tmp_itemList[index].completeChk = false;
        } 
        else {
            // (ÌåêÎß§ÏôÑÎ£å) Î¨∏Íµ¨ ÎπºÎäî Î∂ÄÎ∂Ñ
            tmp_itemList[index].title = tmp_itemList[index].title.replace(" (ÌåêÎß§ÏôÑÎ£å)","");

            // false Î•º true Î°ú Î≥ÄÍ≤Ω
            tmp_itemList[index].completeChk = true;
        }
        setItemList(tmp_itemList);
    }

    let [addList, setAddList] = useState('');
    function add_list() { 
    //     // Î∞©Î≤ï2: Deep Copy Î∞©ÏãùÏúºÎ°ú Î≥µÏÇ¨ÌïòÍ∏∞
    //     if(addList.length > 0) {
    //         let tmp_title = [...title];
    //         tmp_title.unshift(addList);
    //         setTitle(tmp_title);
    //         ////////////////////////////////////
    //         // Î¶¨Ïä§Ìä∏Î•º Ï∂îÍ∞ÄÌïòÎ©¥ 'Ï¢ãÏïÑÏöî', 'ÏóÖÎ°úÎìú ÏãúÍ∞Ñ' Îì§ÏùÑ Îã§ Ï∂îÍ∞ÄÌï¥Ï§òÏïºÌïúÎã§. ÏïàÍ∑∏Îü¨Î©¥ Í∏∞Ï°¥Ïóê 3Í∞úÏù∏Ï±ÑÎ°ú Î¶¨Ïä§Ìä∏Î†à Í∑∏Î†§ÏßÄÍ∏∞ ÎïåÎ≠Ñ„Ñ¥Ïóê 4Î≤àÏß∏ Ìï≠Î™© Î∂ÄÌÑ∞Îäî Ï¢ãÏïÑÏöîÎÇò ÏóÖÎ°úÎìú ÏãúÍ∞ÑÏù¥ Ï∞çÌûàÏßÄ ÏïäÎäîÎã§.

    //         // Ï¢ãÏïÑÏöî Í∞úÏàò Î∞îÍæ∏Í∏∞
    //         let tmp_likeCount = [...likeCount];
    //         tmp_likeCount.unshift(0);
    //         setLikeCount(tmp_likeCount);

    //         // ÏóÖÎ°úÎìú ÏãúÍ∞Ñ Î∞îÍæ∏Í∏∞
    //         let tmp_uploadTime = [...uploadTime];
    //         tmp_uploadTime.unshift('Î∞©Í∏à');
    //         setUploadTime(tmp_uploadTime);
    //         // uploadTime

    //         // ÏàòÏ†ï ÎàÑÎ•¥Î©¥ Î∞îÎÄî Ï†úÎ™© Î¶¨Ïä§Ìä∏ Î∞îÍæ∏Í∏∞
    //         // newTitle
    //         let tmp_newTitle = [...newTitle];
    //         tmp_newTitle.unshift("Ï¥àÎ∞• Ïø†Ìè∞");
    //         setNewTitle(tmp_newTitle);
    //     }
    }

    // ÏÇ≠Ï†ú
    let del_list = (itemId) => {

        // filter => Í∏∞Ï°¥ Î∞∞Ïó¥ÏóêÏÑú Ï°∞Í±¥Ïóê ÏùºÏπòÌïòÎäî ÏÉà Î∞∞Ïó¥ÏùÑ ÏÉùÏÑ±(Î∞òÎ≥µÎ¨∏Ï≤òÎüº Î∞∞Ïó¥Ïùò ÏöîÏÜåÎ•º ÏàúÌöåÌïòÎ©¥ÏÑú ÎèôÏûë)

        setItemList(itemList.filter(  
            (item)=> item.id !== itemId)
        )

    }


    // **** Î™®Îã¨ Í¥ÄÎ†® ***
    // Î™®Îã¨Ï∞Ω ÎùÑÏö∞Í∏∞
    let [showModal, setShowModal] = useState(false);
    
    // Î™áÎ≤àÏß∏ Ï†úÎ™© ÎàåÎ†ÄÎäîÏßÄ index Î≤àÌò∏ Í∞±Ïã†
    let [selectedListIdx, setSelectedListIdx] = useState(-1);

    // 'Ïó¥Í∏∞', 'Ïì∞Í∏∞', ÏàòÏ†ï' Ï§ëÏóê Î≠ê ÎÑòÍ∏∏Í±¥ÏßÄ Ï†ÄÏû•
    let [modalType, setModalType] = useState('');

    let openModal = (tmp, index, type) => {
        setShowModal(tmp);
        setSelectedListIdx(index);
        setModalType(type)
    }


    return (
        <div className="wrap">
            <div className="header">
                <div className="logo">ÎíùÍ∑ºÎßàÏºì</div>

                <div className="hamberger">
                    <div className="line"></div>
                    <div className="line"></div>
                    <div className="line"></div>
                </div>
            </div>

            <div className="main">

            { // title Î∞∞Ïó¥ (['ÌåùÎãàÎã§3','ÌåùÎãàÎã§2','ÌåùÎãàÎã§1']) ÏùÑ map ÏúºÎ°ú ÎèåÎ†§Í∞ÄÎ©¥ÏÑú Î¶¨Ïä§Ìä∏ ÏÉùÏÑ±
                itemList.map((v, i) => {
                    return (
                        <div className="list" key={i}>
                            <h3 onClick={()=>{ openModal(true, i, "open") }}>{itemList[i].title}</h3>
                            <div className="like_count">
                                { itemList[i].likeCount }
                                <span className="btn_like" onClick={()=>{ like_count_up(i)}}>ü§ç</span>
                            </div>
                            <div className="upload_time">{itemList[i].uploadTime}</div>

                            <button className="list_btn btn_chg_title" onClick={()=> {openModal(true, i, "edit")}}>ÏàòÏ†ï</button>
                                
                            <button className="list_btn btn_complete" onClick={()=> {title_chg(i)}}>
                            {
                                itemList[i].completeChk === true ? "ÏôÑÎ£å":"Ï∑®ÏÜå"
                            }
                            </button> 

                            <button className="list_btn btn_complete" onClick={()=>{del_list(itemList[i].id)}}>ÏÇ≠Ï§¥</button>
                        </div>
                    )
                })

            } 
            </div>

            <div className="add_task"> 
                <button className="btn_newList" onClick={()=> {openModal(true, -1, "new")}}>ÎÇ¥ Î¨ºÍ±¥ ÌåîÍ∏∞</button>
            </div>

            {/* { showModal === true ? <Modal /> : null } */}
            { showModal && <Modal openModal={openModal} selectedListIdx={selectedListIdx} itemList={itemList[selectedListIdx]} modalType={modalType} getFromChild={getFromChild} /> }
        </div>
    );
}
export default Ex08_1;
